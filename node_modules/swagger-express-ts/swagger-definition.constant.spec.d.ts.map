{"version":3,"sources":["../../lib/swagger-express-ts-lib/src/swagger-definition.constant.spec.ts"],"names":[],"mappings":"","file":"swagger-definition.constant.spec.d.ts","sourcesContent":["import * as chai from 'chai';\nimport { SwaggerDefinitionConstant } from '.';\nconst expect = chai.expect;\n\ndescribe('SwaggerDefinitionConstant', () => {\n    describe('Produce', () => {\n        it('expect JSON', () => {\n            expect(SwaggerDefinitionConstant.Produce.JSON).exist;\n        });\n        it('expect XML', () => {\n            expect(SwaggerDefinitionConstant.Produce.XML).exist;\n        });\n        it('expect ZIP', () => {\n            expect(SwaggerDefinitionConstant.Produce.ZIP).exist;\n        });\n        it('expect PDF', () => {\n            expect(SwaggerDefinitionConstant.Produce.PDF).exist;\n        });\n        it('expect X_WWW_FORM_URLENCODED', () => {\n            expect(SwaggerDefinitionConstant.Produce.X_WWW_FORM_URLENCODED)\n                .exist;\n        });\n        it('expect FORM_DATA', () => {\n            expect(SwaggerDefinitionConstant.Produce.FORM_DATA).exist;\n        });\n        it('expect TEXT_PLAIN', () => {\n            expect(SwaggerDefinitionConstant.Produce.TEXT_PLAIN).exist;\n        });\n        it('expect TEXT_HTML', () => {\n            expect(SwaggerDefinitionConstant.Produce.TEXT_HTML).exist;\n        });\n        it('expect PNG', () => {\n            expect(SwaggerDefinitionConstant.Produce.PNG).exist;\n        });\n        it('expect GIF', () => {\n            expect(SwaggerDefinitionConstant.Produce.GIF).exist;\n        });\n        it('expect JPEG', () => {\n            expect(SwaggerDefinitionConstant.Produce.JPEG).exist;\n        });\n    });\n\n    describe('Scheme', () => {\n        it('expect HTTP', () => {\n            expect(SwaggerDefinitionConstant.Scheme.HTTP).exist;\n        });\n        it('expect HTTPS', () => {\n            expect(SwaggerDefinitionConstant.Scheme.HTTPS).exist;\n        });\n    });\n\n    describe('Model', () => {\n        describe('Type', () => {\n            it('expect OBJECT', () => {\n                expect(SwaggerDefinitionConstant.Model.Type.OBJECT).exist;\n            });\n            it('expect ARRAY', () => {\n                expect(SwaggerDefinitionConstant.Model.Type.ARRAY).exist;\n            });\n        });\n        describe('Property', () => {\n            describe('Type', () => {\n                expectType(SwaggerDefinitionConstant.Model.Property.Type);\n            });\n            describe('Format', () => {\n                it('expect INT_64', () => {\n                    expect(\n                        SwaggerDefinitionConstant.Model.Property.Format.INT_64\n                    ).exist;\n                });\n            });\n        });\n    });\n\n    describe('Parameter', () => {\n        describe('Type', () => {\n            expectType(SwaggerDefinitionConstant.Parameter.Type);\n        });\n        describe('In', () => {\n            it('expect HEADER', () => {\n                expect(SwaggerDefinitionConstant.Parameter.In.HEADER).exist;\n            });\n            it('expect PATH', () => {\n                expect(SwaggerDefinitionConstant.Parameter.In.PATH).exist;\n            });\n            it('expect QUERY', () => {\n                expect(SwaggerDefinitionConstant.Parameter.In.QUERY).exist;\n            });\n            it('expect BODY', () => {\n                expect(SwaggerDefinitionConstant.Parameter.In.BODY).exist;\n            });\n            it('expect FORM_DATA', () => {\n                expect(SwaggerDefinitionConstant.Parameter.In.FORM_DATA).exist;\n            });\n        });\n    });\n\n    describe('Response', () => {\n        describe('Type', () => {\n            expectType(SwaggerDefinitionConstant.Response.Type);\n        });\n    });\n\n    describe('Security', () => {\n        describe('Type', () => {\n            it('expect BASIC_AUTHENTICATION', () => {\n                expect(\n                    SwaggerDefinitionConstant.Security.Type.BASIC_AUTHENTICATION\n                ).exist;\n            });\n            it('expect API_KEY', () => {\n                expect(SwaggerDefinitionConstant.Security.Type.API_KEY).exist;\n            });\n        });\n        describe('In', () => {\n            it('expect HEADER', () => {\n                expect(SwaggerDefinitionConstant.Security.In.HEADER).exist;\n            });\n            it('expect QUERY', () => {\n                expect(SwaggerDefinitionConstant.Security.In.QUERY).exist;\n            });\n        });\n    });\n});\n\nfunction expectType(Type: any) {\n    it('expect STRING', () => {\n        expect(Type.STRING).exist;\n    });\n    it('expect NUMBER', () => {\n        expect(Type.NUMBER).exist;\n    });\n    it('expect INTEGER', () => {\n        expect(Type.INTEGER).exist;\n    });\n    it('expect BOOLEAN', () => {\n        expect(Type.BOOLEAN).exist;\n    });\n    it('expect ARRAY', () => {\n        expect(Type.ARRAY).exist;\n    });\n    it('expect OBJECT', () => {\n        expect(Type.OBJECT).exist;\n    });\n}\n"]}