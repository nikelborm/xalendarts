{"version":3,"sources":["../../lib/swagger-express-ts-lib/src/i-swagger.ts"],"names":[],"mappings":"","file":"i-swagger.js","sourcesContent":["import { ISwaggerSecurityDefinition } from './swagger.builder';\nexport interface ISwaggerLicense {\n    name: string;\n    url?: string;\n}\n\nexport interface ISwaggerContact {\n    name?: string;\n    url?: string;\n    email?: string;\n}\n\nexport interface ISwaggerInfo {\n    title: string;\n    description?: string;\n    termsOfService?: string;\n    contact?: ISwaggerContact;\n    license?: ISwaggerLicense;\n    version: string;\n}\n\nexport interface ISwaggerVariableServer {\n    enum?: [string];\n    default: string;\n    description?: string;\n}\n\nexport interface ISwaggerServer {\n    url: string;\n    description?: string;\n    variables: [ISwaggerVariableServer]; // TODO : Fix it\n}\n\nexport interface ISwaggerExternalDocs {\n    description?: string;\n    url: string;\n}\n\nexport interface ISwaggerOperationParameter {\n    name: string;\n    in: string;\n    type?: string;\n    format?: string;\n    description?: string;\n    required?: boolean;\n    minimum?: number;\n    maximum?: number;\n    default?: number;\n    deprecated?: boolean;\n    allowEmptyValue?: boolean;\n    schema?: ISwaggerOperationSchema;\n}\n\nexport interface ISwaggerPropertySchemaOperation {\n    type: string;\n}\n\nexport interface ISwaggerOperationSchema {\n    type?: string;\n    items?: { $ref: string };\n    $ref?: string;\n    format?: string;\n    required?: string[]; // Array content name of property\n    properties?: {[key: string] : ISwaggerPropertySchemaOperation}\n}\n\nexport interface ISwaggerOperationSchemaItems {\n    $ref: string;\n}\n\nexport interface ISwaggerOperationResponse {\n    description?: string;\n    schema?: ISwaggerOperationSchema;\n}\n\nexport interface ISwaggerOperation {\n    tags?: string[];\n    summary?: string;\n    description?: string;\n    operationId: string | symbol;\n    parameters?: ISwaggerOperationParameter[];\n    produces?: string[];\n    consumes?: string[];\n    responses?: { [key: string]: ISwaggerOperationResponse };\n    security?: { [key: string]: any[] }[];\n    deprecated?: boolean;\n}\n\nexport interface ISwaggerTag {\n    name: string;\n    description: string;\n}\n\nexport interface ISwaggerPath {\n    get?: ISwaggerOperation;\n    post?: ISwaggerOperation;\n    put?: ISwaggerOperation;\n    patch?: ISwaggerOperation;\n    delete?: ISwaggerOperation;\n}\n\nexport interface ISwaggerDefinitionPropertyItems {\n    $ref?: string;\n    type?: string;\n}\n\nexport interface ISwaggerDefinitionProperty {\n    type?: string; // Example : SwaggerDefinition.Definition.Property.Type.INTEGER\n    format?: string; // Example : SwaggerDefinition.Definition.Property.Format.INT_64\n    required?: boolean;\n    description?: string;\n    enum?: string[];\n    items?: ISwaggerDefinitionPropertyItems;\n    $ref?: string;\n    example?: any []\n}\n\nexport interface ISwaggerDefinitionXML {\n    name: string;\n}\n\nexport interface ISwaggerDefinition {\n    type: string; // Example : SwaggerDefinition.Definition.Type.OBJECT\n    required?: string[];\n    properties: { [key: string]: ISwaggerDefinitionProperty };\n    xml?: ISwaggerDefinitionXML;\n    description?: string;\n}\n\nexport interface ISwagger {\n    basePath?: string;\n    openapi?: string;\n    info: ISwaggerInfo;\n    servers?: [ISwaggerServer];\n    paths?: { [key: string]: ISwaggerPath };\n    host?: string;\n    swagger: string;\n    tags?: ISwaggerTag[];\n    schemes: string[]; // Example : SwaggerDefinition.Scheme.HTTP\n    produces: string[]; // Example : SwaggerDefinition.Produce.JSON\n    consumes: string[]; // Example : SwaggerDefinition.Consume.JSON\n    definitions: { [key: string]: ISwaggerDefinition };\n    externalDocs?: ISwaggerExternalDocs;\n    securityDefinitions?: { [key: string]: ISwaggerSecurityDefinition };\n}\n"]}